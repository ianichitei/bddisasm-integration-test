name: Build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cc: "cl", cxx: "cl" }
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++" }
          - { name: "Ubuntu clang", os: ubuntu-latest, cc: "clang", cxx: "clang++" }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'      
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Prepare MSBuild
      if: ${{ matrix.config.os == 'windows-latest' }}
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Prepare MSVC CMD
      if: ${{ matrix.config.os == 'windows-latest' }}
      uses: ilammy/msvc-dev-cmd@v1

    - name: Use as sub-project
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{ runner.workspace }}/build_as_subproject
        cc: ${{ matrix.config.cc }}
        cxx: ${{ matrix.config.cxx }}
        configure-options: -G Ninja -DUSE_AS=subdir
        build-type: Release

    - name: Install
      uses: ashutoshvarma/action-cmake-build@master
      with:
        source-dir: bddisasm
        build-dir: ${{ runner.workspace }}/bddisasm/build_install
        cc: ${{ matrix.config.cc }}
        cxx: ${{ matrix.config.cxx }}
        configure-options: -G Ninja -DBDD_INCLUDE_TOOL=OFF -DCMAKE_INSTALL_PREFIX=${{ runner.workspace }}/install
        build-type: Release
        install-build: true

    - name: Use from installation
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{ runner.workspace }}/build_installed
        cc: ${{ matrix.config.cc }}
        cxx: ${{ matrix.config.cxx }}
        configure-options: -G Ninja -DUSE_AS=installed -DBDDISASM_INSTALL_PATH=${{ runner.workspace }}/install
        build-type: Release

    - name: Install in path with spaces
      uses: ashutoshvarma/action-cmake-build@master
      with:
        source-dir: bddisasm
        build-dir: ${{ runner.workspace }}/bddisasm/build_install_spaces
        cc: ${{ matrix.config.cc }}
        cxx: ${{ matrix.config.cxx }}
        configure-options: -G Ninja -DBDD_INCLUDE_TOOL=OFF -DCMAKE_INSTALL_PREFIX='"install dir"'
        build-type: Release
        # install-build: true

    - name: Print faulty cmake file
      run: cat /home/runner/work/bddisasm-integration-test/bddisasm/build_install_spaces/cmake_install.cmake

    - name: Use from installation with spaces
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{ runner.workspace }}/build_installed_spaces
        cc: ${{ matrix.config.cc }}
        cxx: ${{ matrix.config.cxx }}
        configure-options: -G Ninja -DUSE_AS=installed -DBDDISASM_INSTALL_PATH='"install dir"'
        build-type: Release

  build-with-vcpkg-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Prepare vcpkg
      if: ${{ false }}
      run: |
        cd vcpkg
        .\bootstrap-vcpkg.bat
        .\vcpkg.exe install bddisasm:x64-windows
        .\vcpkg.exe install bddisasm:x86-windows
        cd ..

    - name: Use with vcpkg
      if: ${{ false }}
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{ runner.workspace }}/build
        cc: cl
        cxx: cl
        configure-options: -G Ninja -DUSE_AS=vcpkg -DCMAKE_TOOLCHAIN_FILE="${{ runner.workspace }}/bddisasm-integration-test/vcpkg/scripts/buildsystems/vcpkg.cmake"
        build-type: Release
        
  build-with-vcpkg-linux:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++" }
          - { name: "Ubuntu clang", os: ubuntu-latest, cc: "clang", cxx: "clang++" }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Prepare vcpkg
      if: ${{ false }}
      run: |
        cd vcpkg
        ./bootstrap-vcpkg.sh
        ./vcpkg install bddisasm:x64-linux
        cd ..

    - name: Use with vcpkg
      if: ${{ false }}
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{ runner.workspace }}/build
        cc: cl
        cxx: cl
        configure-options: -G Ninja -DUSE_AS=vcpkg -DCMAKE_TOOLCHAIN_FILE="${{ runner.workspace }}/bddisasm-integration-test/vcpkg/scripts/buildsystems/vcpkg.cmake"
        build-type: Release
